{"version":3,"sources":["webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.html","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/environments/environment.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = 138\n// module chunks = 2","module.exports = \"<!-- Main jumbotron for a primary marketing message or call to action -->\\n<div class=\\\"jumbotron\\\">\\n  <div class=\\\"container\\\">\\n    <h1>GCE Instance Manager</h1>\\n    <p>インスタンスのアップダウンを行います！</p>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <!-- Example row of columns -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h2>appid: {{ project }}</h2>\\n      <p><button class=\\\"btn btn-default\\\" (click)=\\\"instanceRefresh()\\\"><span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Refresh</button></p>\\n      <table class=\\\"table\\\">\\n        <tr>\\n          <th>instance</th>\\n          <th>zone</th>\\n          <th>status</th>\\n          <th>ip address</th>\\n          <th>up</th>\\n          <th>down</th>\\n        </tr>\\n        <tr *ngFor=\\\"let ins of instanceList\\\">\\n          <td>{{ins.instance}}</td>\\n          <td>{{ins.zone}}</td>\\n          <td>{{ins.status}}</td>\\n          <!--<td><a ng-href=\\\"http://{{ins.ip}}/\\\" *ngIf=\\\"ns.ip != ''\\\" target=\\\"_blank\\\">{{ins.ip}}</a></td>-->\\n          <td><a href=\\\"http://{{ins.ip}}/\\\" target=\\\"_blank\\\">{{ins.ip}}</a></td>\\n          <td><button class=\\\"btn btn-info\\\" (click)=\\\"startIns(ins)\\\">start</button></td>\\n          <td><button class=\\\"btn btn-danger\\\" (click)=\\\"stopIns(ins)\\\">stop</button></td>\\n        </tr>\\n      </table>\\n    </div>\\n  </div>\\n</div> <!-- /container -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 143\n// module chunks = 2","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 74;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 74\n// module chunks = 2","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import 'rxjs/add/operator/switchMap';\nimport { Component, OnInit } from '@angular/core';\n\nimport { Instance } from './instance';\nimport { InstanceService, ProjectIdService, Param } from './app.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [InstanceService, ProjectIdService]\n})\nexport class AppComponent implements OnInit{\n  project: string;\n  instanceList: Instance[];\n\n  constructor(\n    private instanceService: InstanceService,\n    private projectIdService: ProjectIdService\n  ) { }\n\n  getProjectID(): void{\n    this.projectIdService.getProjectID().then(projectID => this.project = projectID)\n  }\n  getInstances(): void {\n    this.instanceService.getInstances().then(instanceList => this.instanceList = instanceList);\n  }\n\n\n  ngOnInit(): void {\n    this.getInstances();\n    this.getProjectID();\n  }\n\n  instanceRefresh(): void{\n    this.getInstances();\n  }\n\n  startIns(ins: Instance): void {\n    let param: Param = AppComponent.createParam(ins, 'start');\n    this.instanceService.post(param)\n      .then(() => this.getInstances());\n  }\n\n  stopIns(ins: Instance): void {\n    let param: Param = AppComponent.createParam(ins, 'stop');\n    this.instanceService.post(param)\n      .then(() => this.getInstances());\n  }\n\n  private static createParam(ins: Instance, method: string): Param {\n    let param = new Param();\n    param.instance = ins.instance;\n    param.zone = ins.zone;\n    param.Method = method;\n    return param;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\n// import { InstanceService } from './app.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/**\n * Created by t_nuki on 2017/04/27.\n */\nimport { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { Instance } from './instance'\n\nexport class Param {\n  instance: string;\n  zone: string;\n  Method: string;\n}\n\n@Injectable()\nexport class InstanceService {\n\n  private headers = new Headers({'Content-Type': 'application/json'});\n  private instanceUrl = '/instance';  // URL to web api\n\n  constructor(private http: Http) { }\n\n  getInstances(): Promise<Instance[]> {\n    // return Promise.resolve(INSLIST);\n    return this.http.get(this.instanceUrl)\n      .toPromise()\n      .then(response => response.json() as Instance[])\n      .catch(this.handleError);\n  }\n\n  post(param: Param): Promise<Instance> {\n    const url = `${this.instanceUrl}`;\n    return this.http\n      .post(url, JSON.stringify(param), {headers: this.headers})\n      .toPromise()\n      .then(() => null)\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n}\n\n@Injectable()\nexport class ProjectIdService {\n\n  private headers = new Headers({'Content-Type': 'application/json'});\n  private projectIdUrl = '/projectid';  // URL to web api\n\n  constructor(private http: Http) { }\n\n  getProjectID(): Promise<string> {\n    return this.http.get(this.projectIdUrl)\n      .toPromise()\n      .then(response => response.json().projectId as string)\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts"],"sourceRoot":""}